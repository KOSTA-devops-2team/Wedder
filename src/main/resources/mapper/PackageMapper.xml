<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.wedder.dao.PackageMapper">

    <select id="selectAllPackage" resultType="PackageDetailDto">
        SELECT
        p.package_id AS packageId,
        p.package_name AS packageName,
        p.package_img AS packageImg,
        p.description AS description,
        p.discount_rate AS discountRate,
        MAX(CASE WHEN c.company_category = '스튜디오' THEN c.company_name END) AS studioName,
        MAX(CASE WHEN c.company_category = '드레스' THEN c.company_name END) AS dressName,
        MAX(CASE WHEN c.company_category = '메이크업' THEN c.company_name END) AS makeupName
        FROM package p
        JOIN packageCategory pc ON p.package_id = pc.package_id
        JOIN company c ON pc.company_id = c.company_id
        GROUP BY p.package_id
    </select>

    <select id="selectBestPackage" resultType="PackageDetailDto">
        SELECT
        p.package_id,
        p.description,
        p.package_img,
        p.discount_rate,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN c.company_name END) AS studio_name,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN ci.img_url END) AS studio_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN c.company_name END) AS dress_name,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN ci.img_url END) AS dress_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN c.company_name END) AS makeup_name,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN ci.img_url END) AS makeup_img_url
        FROM package p
        JOIN packageCategory pc ON p.package_id = pc.package_id
        JOIN company c ON pc.company_id = c.company_id
        LEFT JOIN companyImage ci ON c.company_id = ci.company_id AND ci.img_seq = 1
        WHERE p.category_type = 'BEST'
        GROUP BY p.package_id;
    </select>

    <select id="selectMDPickPackage" resultType="PackageDetailDto">
        SELECT
        p.package_id,
        p.description,
        p.package_img,
        p.discount_rate,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN c.company_name END) AS studio_name,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN ci.img_url END) AS studio_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN c.company_name END) AS dress_name,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN ci.img_url END) AS dress_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN c.company_name END) AS makeup_name,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN ci.img_url END) AS makeup_img_url
        FROM package p
        JOIN packageCategory pc ON p.package_id = pc.package_id
        JOIN company c ON pc.company_id = c.company_id
        LEFT JOIN companyImage ci ON c.company_id = ci.company_id AND ci.img_seq = 1
        WHERE p.category_type = 'MDPICK'
        GROUP BY p.package_id;

    </select>

    <!--패키지 상세페이지-->
    <select id="selectCompanyInPackage" parameterType="int" resultType="PackageDetailDto">
        SELECT *
        FROM company c
        JOIN packageCategory pc ON c.company_id = pc.company_id
        JOIN package p ON pc.package_id = p.package_id
        LEFT JOIN companyImage ci ON c.company_id = ci.company_id
        WHERE pc.package_id = #{packageId}
    </select>

    <!--업체명 자동완성 기능-->
    <select id="autocomplete" parameterType="map" resultType="PackageDetailDto">
        SELECT
        p.package_id,
        p.package_name,
        p.package_img,
        p.description,
        p.discount_rate,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN c.company_name END) AS studioName,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN ci.img_url END) AS studio_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN c.company_name END) AS dressName,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN ci.img_url END) AS dress_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN c.company_name END) AS makeupName,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN ci.img_url END) AS makeup_img_url
        FROM package p
        JOIN packageCategory pc ON p.package_id = pc.package_id
        JOIN company c ON pc.company_id = c.company_id
        LEFT JOIN companyImage ci ON c.company_id = ci.company_id AND ci.img_seq = 1
        GROUP BY
        p.package_id, p.package_name, p.package_img, p.description, p.discount_rate
        HAVING
        (studioName LIKE CONCAT('%', #{value}, '%') OR
        dressName LIKE CONCAT('%', #{value}, '%') OR
        makeupName LIKE CONCAT('%', #{value}, '%'));
    </select>

    <select id="selectAllPackagesByCompanyName" parameterType="String" resultType="PackageDetailDto">
        SELECT
        p.package_id,
        p.package_name,
        p.package_img,
        p.description,
        p.discount_rate,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN c.company_name END) AS studioName,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN ci.img_url END) AS studio_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN c.company_name END) AS dressName,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN ci.img_url END) AS dress_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN c.company_name END) AS makeupName,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN ci.img_url END) AS makeup_img_url
        FROM package p
        JOIN packageCategory pc ON p.package_id = pc.package_id
        JOIN company c ON pc.company_id = c.company_id
        LEFT JOIN companyImage ci ON c.company_id = ci.company_id AND ci.img_seq = 1
        GROUP BY
        p.package_id, p.package_name, p.package_img, p.description, p.discount_rate
        HAVING
        (studioName LIKE CONCAT('%', #{companyName}, '%') OR
        dressName LIKE CONCAT('%', #{companyName}, '%') OR
        makeupName LIKE CONCAT('%', #{companyName}, '%'));

    </select>

    <select id="selectPackagesByPriceRange" parameterType="map" resultType="PackageDetailDto">
        SELECT  p.package_id,
        p.package_name,
        p.package_img,
        p.description,
        p.discount_rate,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN c.company_name END) AS studioName,
        GROUP_CONCAT(CASE WHEN c.company_category = '스튜디오' THEN ci.img_url END) AS studio_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN c.company_name END) AS dressName,
        GROUP_CONCAT(CASE WHEN c.company_category = '드레스' THEN ci.img_url END) AS dress_img_url,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN c.company_name END) AS makeupName,
        GROUP_CONCAT(CASE WHEN c.company_category = '메이크업' THEN ci.img_url END) AS makeup_img_url,
        SUM(c.basic_price * (1 - p.discount_rate / 100)) AS final_price
        FROM package p
        JOIN packageCategory pc ON p.package_id = pc.package_id
        JOIN company c ON pc.company_id = c.company_id
        LEFT JOIN companyImage ci ON c.company_id = ci.company_id AND ci.img_seq = 1
        GROUP BY p.package_id, p.package_name
        HAVING final_price BETWEEN #{minPrice} AND #{maxPrice}
        ORDER BY final_price ASC
    </select>

    <select id="selectAvailableDateList" parameterType="String" resultType="CompanyScheduleDTO">
        SELECT *
        FROM company_schedule
        WHERE company_name = #{companyName}
    </select>

    <!--패키지 일정 -->
    <select id="selectAvailableTimeList" parameterType="map" resultType="CompanyScheduleDTO">
        SELECT *
        FROM company_schedule
        WHERE company_name = #{companyName}
        AND date = #{date}
    </select>
</mapper>